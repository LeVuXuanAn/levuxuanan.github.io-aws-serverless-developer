[
{
	"uri": "//localhost:1313/vi/3-event/2.2-module2/2.2.1-vpc/",
	"title": "Amazon Virtual Private Cloud",
	"tags": [],
	"description": "",
	"content": "Link video ở đây.\nAmazon Virtual Private Cloud (VPC) Là một dịch vụ cung cấp môi trường mạng ảo riêng tư được cô lập về mặt logic khỏi các mạng khác trên AWS Cloud.\nCho phép khởi tạo, khởi chạy các tài nguyên (máy chủ ảo, csdl, các cân bằng tải,\u0026hellip;) trong 1 môi trường ảo riêng mà chúng ta đã xác định và có quyền kiểm soát hoàn toàn.\nAmazon VPC khác với VPC truyền thống. VPC truyền thống là các doanh nghiệp họ sẽ xây dựng môi trường ảo hoá tập trung ở local và on-permis với các tính năng mô phỏng theo các tính năng của các nhà cung cấp dịch vụ cloud lớn hay còn gọi là hyperscale cloud provider như AWS.\nTạo một Account AWS - Chọn Region - Bên dưới 1 Region sẽ có tối thiểu 3 AZ\nVPC nằm trong 1 Region, khi tạo VPC cần khai báo một lớp mạng CIDR IPv4 (bắt buộc) và IPv6 (tuỳ chọn)\nGiới hạn của VPC hiện tại là 5 VPC/Region/Account\nMục đích VPC: phân tách các môi trường (Product/Dev/Test/\u0026hellip;)\nNếu muốn các tài nguyên tách biệt hẳn (User ko thấy 1 tài nguyên cụ thể thì nên phân tách AWS Account, VPC không thực hiện đc vấn đề này)\nSubnet Subnet là mạng con ảo thuộc mạng ảo VPC.\nVPC Subnet sẽ nằm trong 1 AZ cụ thể.\nKhi tạo Subnet, chúng ta chỉ định CIDR cho mạng con đó và đây là một tập hợp con của khối VPC CIDR.\nTrong mỗi Subnet, AWS sẽ giữ lại 5 địa chỉ IP. Ví dụ nếu Subnet có CIDR là 10.10.1.0/24:\nnetwork: 10.10.1.0 broadcast: 10.10.1.255 cho router: 10.10.1.1 cho DNS: 10.10.1.2 cho tính năng tương lai: 10.10.1.3 Quy ước:\nPublic subnet: tài nguyên, máy chủ ảo được cho phép đi ra ngoài internet Private subnet: ngược lại Route table Route table (Bảng định tuyến), tập hợp các Route, để xác định đường đi cho mạng.\nKhi tạo VPC, AWS sẽ tạo một Default Route table, Default Route table không thể bị xoá và chỉ chứa 1 Route duy nhất là Route cho phép tất cả các subnet trong VPC liên lạc với nhau.\nRoute table sẽ được gán vào Subnet.\nĐể tạo một Public hay Private subnet, ta sẽ tạo một Custom Route table.\nElastic Network Interface (ENI) ENI là một card mạng ảo, chúng ta có thể chuyển sang các EC2 Instance khác.\nKhi chuyển sang một máy chủ mới, một ENI vẫn sẽ duy trì:\nĐịa chỉ IP Private Địa chỉ Elastic IP address - là một địa chỉ Public Địa chỉ MAC - là một địa chỉ vật lý Elastic IP address (EIP) Là một địa chỉ public IPv4 tĩnh, có thể liên kết với một ENI.\nKhi không sử dụng sẽ bị charge phí.\nVPC Endpoint VPC Endpoint cho phép chúng ta kết nối các tài nguyên nằm trong VPC tới các dịch vụ AWS được hỗ trợ (AWS PrivateLink - đi qua mạng private của AWS) mà không cần thông qua kết nối internet.\nCó 2 kiểu:\nInterface Endpoint: Sử dụng một Elastic Network Interface trong VPC cũng với một địa chỉ IP Private để kết nối tới một dịch vụ hỗ trợ Gateway Endpoint: Sử dụng một route table để định tuyến tới endpoint của dịch vụ hỗ trợ (chỉ S3 và Dynamo DB) Internet Gateway Là một thành phần của AWS VPC có khả năng mở rộng quy mô theo chiều ngang (scale out) cho phép các EC2 Instance trong VPC có thể truyền thông tin ra ngoài internet.\nInternet Gateway được quản lý bởi AWS, chúng ta không cần phải cấu hình autoscale hoặc high availability.\nInternet Gateway đơn giản hoá việc cấu hình network truyền thống.\nNAT Gateway Cho phép các EC2 Instance trong Subnet truy cập tới internet hoặc các dịch vụ AWS khác. Chỉ chấp nhận kết nối chiều ra, không chấp nhận kết nối chiều vào.\nTrong thực tế các máy chủ EC2 thường nằm trong Private subnet.\n"
},
{
	"uri": "//localhost:1313/vi/1-introduction/",
	"title": "Giới thiệu tác phẩm",
	"tags": [],
	"description": "",
	"content": "GIỚI THIỆU TÁC PHẨM Tài liệu ghi chép FCJ Tài liệu ghi chép FCJ là tài liệu ghi chép lý thuyết về Cloud mà cá nhân tôi đã tự nghiên cứu trên hành trình lên mây của mình tại Amazon Web Serice. Tài liệu bao gồm kiến thức lý thuyết và thực hành các bài lab mà cá nhân tôi đã tự nghiên cứu Tài liệu đang trong quá trình hoàn thiện và cập nên nên sẽ không tránh khỏi những điều thiếu xót. Cá nhân tôi hy vọng sẽ nhận được sự đóng góp của mọi người. Bố cục của tài liệu Tài liệu bao gồm 03 phần: Phần nội dung Phần thực hành Những kinh nghiệm rút ra trên hành trình lên mây "
},
{
	"uri": "//localhost:1313/vi/2-content/2.1.-wellarchitectedframework/",
	"title": "Module 0: Kiến trúc hoàn hảo",
	"tags": [],
	"description": "",
	"content": "1. Giới thiệu về AWS Well-Architected Framework AWS Well-Architected Framework giúp bạn hiểu được những ưu và nhược điểm của các quyết định mà người phát triển đưa ra khi xây dựng hệ thống trên AWS. Bằng cách sử dụng Framework này, người sử dụng sẽ học được những thực hành tốt nhất về kiến trúc cho việc thiết kế và vận hành các khối lượng công việc Khối lượng công việc: đề cập đến các ứng dụng, dịch vụ, hoặc tập hợp các hoạt động mà một hệ thống phải xử lý an toàn, đáng tin cậy, hiệu quả, chi phí hiệu quả và bền vững trên đám mây AWS.\nAWS Well-Architected Framework cung cấp một cách thức nhất quán để đánh giá hệ thống so với các thực hành tốt nhất và xác định những lĩnh vực cần cải thiện. Quá trình đánh giá kiến trúc là một cuộc đối thoại xây dựng về các quyết định kiến trúc, không phải là một cơ chế kiểm toán. Các hệ thống được thiết kế tốt =\u0026gt; Làm tăng đáng kể khả năng thành công của doanh nghiệp.\nAWS Well-Architected Framework cung cấp một tập hợp các câu hỏi và cách tiếp cận nhất quán để đánh giá và đưa ra các khuyến nghị cải thiện để thiết kế kiến trúc phù hợp với các thực hành tốt nhất cho hệ thống đám mây hiện đại.\nFramework này dành cho những người trong các vai trò kỹ thuật, như giám đốc công nghệ (CTO), kiến trúc sư, lập trình viên và thành viên nhóm vận hành.\nNó mô tả các thực hành và chiến lược tốt nhất của AWS khi thiết kế và vận hành workload trên đám mây, và cung cấp liên kết đến các chi tiết triển khai và mẫu kiến trúc thêm (xem thêm tại đây).\nAWS Well-Architected Tool (AWS WA Tool) là một dịch vụ trên đám mây cung cấp một quy trình nhất quán giúp đánh giá và đo lường kiến trúc bằng AWS Well-Architected Framework. AWS WA Tool cung cấp các khuyến nghị để giúp workload trở nên đáng tin cậy, an toàn, hiệu quả và chi phí hiệu quả hơn.\n2. Các thuật ngữ được sử dụng AWS Well-Architected Framework dựa trên 6 trụ cột: Trụ cột Mô tả Operational excellence Khả năng hỗ trợ phát triển và vận hành workload một cách hiệu quả, liên tục cải tiến các quy trình và thủ tục hỗ trợ để mang lại giá trị kinh doanh Security Tận dụng công nghệ đám mây để bảo vệ dữ liệu, hệ thống và tài nguyên theo cách có thể. Reliability Khả năng workload thực hiện chức năng dự định của nó một cách chính xác và nhất quán. Performance efficiency Khả năng sử dụng tài nguyên máy tính một cách hiệu quả để đáp ứng các yêu cầu của hệ thống và duy trì hiệu quả đó khi nhu cầu thay đổi và công nghệ phát triển. Cost optimization Khả năng vận hành các hệ thống để mang lại giá trị kinh doanh ở mức giá thấp nhất. Sustainability Khả năng liên tục cải thiện tác động bền vững bằng cách giảm tiêu thụ năng lượng và tăng hiệu quả trên tất cả các thành phần của workload bằng cách tối đa hóa lợi ích từ các tài nguyên được cung cấp và giảm thiểu tổng nguồn tài nguyên cần thiết. 3. Các thuật khác Bên cạnh đó AWS Well-Architect Framework còn sử dụng các thuật ngữ sau:\nMột component (thành phần) là code, cấu hình và Tài nguyên AWS cùng hoạt động để đáp ứng một yêu cầu. Một component thường là đơn vị sở hữu kỹ thuật và được tách biệt với các component khác.\nThuật ngữ workload được sử dụng để xác định một tập hợp các component cùng nhau mang lại giá trị kinh doanh. Một workload thường là mức độ chi tiết mà lãnh đạo kinh doanh và công nghệ đề cập đến.\nChúng ta coi architecture (kiến trúc) là cách các component hoạt động cùng nhau trong một workload. Cách thức giao tiếp và tương tác giữa các component thường là trọng tâm của sơ đồ architecture.\nMilestone (mốc) đánh dấu những thay đổi chủ chốt trong architecture của bạn khi nó phát triển trong suốt vòng đời sản phẩm (thiết kế, triển khai, kiểm thử, đưa vào vận hành và trong giai đoạn sản xuất).\nTrong tổ chức, technology portfolio là tập hợp các workload cần thiết để doanh nghiệp hoạt động.\nLevel of effort (Mức độ nỗ lực) được phân loại theo lượng thời gian, công sức và độ phức tạp mà một tác vụ đòi hỏi để triển khai. Mỗi tổ chức cần xem xét quy mô và chuyên môn của nhóm cũng như độ phức tạp của workload để xác định level of effort phù hợp cho tổ chức đó.\nCao: Công việc có thể mất nhiều tuần hoặc nhiều tháng. Điều này có thể được chia nhỏ thành nhiều câu chuyện, phiên bản và nhiệm vụ.\nTrung bình: Công việc có thể mất nhiều ngày hoặc nhiều tuần. Điều này có thể được chia nhỏ thành nhiều phiên bản và nhiệm vụ.\nThấp: Công việc có thể mất nhiều giờ hoặc nhiều ngày. Điều này có thể được chia nhỏ thành nhiều nhiệm vụ.\nKhi thiết kế architecture cho workload, cần phải cân bằng giữa các trụ cột dựa trên bối cảnh kinh doanh.\nVD: trong môi trường phát triển, có thể hy sinh độ tin cậy để giảm chi phí; trong các giải pháp quan trọng, cần tối ưu hoá độ tin cậy từ đó dẫn đến chi phí và tác động bền vững tăng lên,\u0026hellip;\nBảo mật và Hiệu suất vận hành thường không được cân bằng với các trụ cột khác.\n4. Về kiến trúc 4.1. Như thế nào là một kiến trúc hoàn hảo Thường có một nhóm trung tâm cho kiến trúc công nghệ với các vai trò như kiến trúc sư kỹ thuật, kiến trúc sư giải pháp, kiến trúc sư dữ liệu, kiến trúc sư mạng và kiến trúc sư bảo mật.\nThay vì có một nhóm kiến trúc tập trung, AWS phân tán khả năng kiến trúc vào các nhóm sản phẩm/tính năng khác nhau. Điều này giúp các nhóm tập trung vào nhu cầu của khách hàng và xây dựng sản phẩm phù hợp.\n\u0026ldquo;Ý định tốt không bao giờ có tác dụng, cần có cơ chế tốt để thực hiện hoá mọi thứ\u0026rdquo; - Jeff Bezos.\nĐể đảm bảo chất lượng và tuân thủ tiêu chuẩn, AWS có hai cách thức chính:\nThiết lập các thực hành, quy trình, tiêu chuẩn được chấp nhận và có chuyên gia xác minh việc tuân thủ của các nhóm.\nTriển khai cơ chế kiểm tra tự động để kiểm tra việc đáp ứng các tiêu chuẩn, thay vì hoàn toàn dựa vào nỗ lực con người.\nAWS tin rằng kiến trúc doanh nghiệp tốt có thể nảy sinh khi các nhóm tập trung vào nhu cầu khách hàng và tuân thủ các thực hành, các hướng dẫn tốt nhất thông qua mô hình phân tán với cộng đồng kỹ sư chính. Đánh giá Well-Architected Framework giúp hiểu rõ rủi ro và xác định vấn đề cần cải thiện bằng cơ chế, đào tạo hoặc chia sẻ kiến thức.\n4.2. Nguyên tắc thiết kế chung Ngừng đoán nhu cầu về tài nguyên: Trên đám mây, bạn có thể động thái co giãn tài nguyên lên hoặc xuống dựa trên nhu cầu, tránh cung cấp quá nhiều hoặc không đủ. Thử nghiệm hệ thống trên quy mô sản xuất: Triển khai môi trường kiểm tra quy mô sản xuất theo nhu cầu trên đám mây để kiểm tra, sau đó dỡ bỏ khi xong để tránh chi phí liên tục. Tự động hóa với định hướng thử nghiệm: Tự động hóa triển khai và khai thác cơ sở hạ tầng bất biến để bạn có thể thử nghiệm, theo dõi thay đổi và dễ dàng khôi phục nếu cần. Cân nhắc các kiến trúc tiến hóa: Đám mây tạo điều kiện cho kiến trúc tiến hóa theo thời gian thay vì những nỗ lực tái thiết kế lớn, hiếm dùng. Cải thiện kiến trúc bằng việc thu thập dữ liệu: Thu thập số liệu về tác vụ của bạn để lập trình các lựa chọn thiết kế và cải tiến theo cách thức lặp đi lặp lại. Cải thiện qua game days: Định kỳ mô phỏng sự cố/sự kiện thực tế trong môi trường sản xuất để kiểm tra khả năng phục hồi và tìm ra lĩnh vực cần cải thiện quy trình và kiến trúc. 5. Các trụ cột của kiến trúc hoàn hảo 5.1. Trụ cột 1: Vận hành xuất sắc 5.1.1. Khái niệm Trụ cột Vận hành xuất sắc bao gồm khả năng hỗ trợ phát triển và vận hành khối lượng công việc một cách hiệu quả, hiểu rõ hơn về hoạt động của chúng và liên tục cải tiến các quy trình và thủ tục hỗ trợ để mang lại giá trị kinh doanh. 5.1.2. Nguyên tắc thiết kế 1. Thực hiện hoạt động dưới dạng code\nĐịnh nghĩa toàn bộ môi trường làm việc (ứng dụng, hạ tầng) dưới dạng code. Cập nhật môi trường bằng code. Lập trình các quy trình vận hành và tự động hóa chúng để đáp ứng sự kiện. Giảm thiểu lỗi con người và đảm bảo phản ứng nhất quán. 2. Thực hiện thay đổi nhỏ, đảo ngược thường xuyên\nThiết kế môi trường có khả năng mở rộng và linh hoạt. Cập nhật thường xuyên các thành phần. Sử dụng kỹ thuật triển khai tự động. Thay đổi nhỏ, từng bước để giảm bán kính ảnh hưởng của sự cố. Đảo ngược nhanh chóng khi có lỗi. Tăng Độ tin cậy để thích ứng với thay đổi thị trường. 3. Hoàn thiện quy trình thường xuyên\nXem xét và cập nhật quy trình khi môi trường phát triển. Đánh giá hiệu quả của quy trình và kiến thức của nhóm. Cập nhật, truyền đạt và đào tạo các thay đổi quy trình. Chia sẻ phương pháp hay nhất cho các thành viên trong nhóm. 4. Dự đoán sự cố\nThực hiện \u0026ldquo;phân tích hậu quả (pre-moterm)\u0026rdquo; để xác định nguồn lỗi tiềm ẩn. Loại bỏ hoặc giảm nhẹ các nguyên nhân gây lỗi. Kiểm tra kịch bản sự cố và quy trình ứng phó. Tổ chức các game days để mô phỏng các sự cố. 5. Học hỏi từ sự cố\nRút ra bài học từ tất cả sự cố vận hành. Chia sẻ bài học trong nhóm và toàn bộ tổ chức. 6. Sử dụng dịch vụ được quản lý\nSử dụng các dịch vụ được quản lý của AWS. Xây dựng quy trình tương tác với các dịch vụ đó. 7. Triển khai quan sát hiệu quả\nTheo dõi hành vi, hiệu suất, độ tin cậy, chi phí, sức khỏe. Thiết lập chỉ số hiệu suất chính (KPI). Sử dụng dữ liệu quan sát để ra quyết định và hành động. Cải thiện hiệu suất, độ tin cậy, chi phí dựa trên dữ liệu. Nhìn chung là áp dụng nguyên lý phát triển phần mềm, tự động hóa quy trình, thường xuyên đánh giá và cải tiến, dự đoán rủi ro, chia sẻ kinh nghiệm và tận dụng các công cụ điện toán đám mây để thực hiện tốt trụ cột này.\n5.2. Trụ cột 2: Bảo mật 5.2.1. Khái niệm Trụ cột Bảo mật bao gồm khả năng bảo vệ dữ liệu, hệ thống và tài nguyên, tận dụng công nghệ đám mây nhằm cải thiện bảo mật cho hệ thống, kiến trúc. 5.2.2. Nguyên tắc thiết kế 1. Xây dựng nền tảng định danh mạnh\nÁp dụng nguyên tắc cấp quyền tối thiểu. Thực hiện phân tách nhiệm vụ. Tập trung hóa quản lý định danh. Giảm sử dụng thông tin xác thực tĩnh dài hạn. 2. Duy trì khả năng truy vết\nGiám sát và cảnh báo trong thời gian thực. Kiểm toán các hành động và thay đổi. Tích hợp thu thập log và metric. Tự động hóa việc điều tra và phản ứng. 3. Áp dụng bảo mật nhiều lớp\nSử dụng phương pháp phòng thủ theo chiều sâu. Bảo vệ tất cả các tầng: từ mạng đến mã nguồn. 4. Tự động hóa thực hành bảo mật\nTriển khai các cơ chế bảo mật tự động. Xây dựng kiến trúc bảo mật bằng mã. Quản lý các biện pháp kiểm soát trong template có version. 5. Bảo vệ dữ liệu\nPhân loại dữ liệu theo độ nhạy cảm. Sử dụng mã hóa, tokenization và kiểm soát truy cập. 6. Hạn chế tiếp xúc trực tiếp với dữ liệu\nSử dụng công cụ giảm thiểu xử lý thủ công. Giảm nguy cơ lỗi do con người. 7. Chuẩn bị cho sự cố bảo mật\nXây dựng quy trình quản lý và điều tra sự cố. Thực hiện mô phỏng ứng phó. Sử dụng công cụ tự động để tăng tốc phát hiện và khôi phục. Các nguyên tắc này tạo nên một chiến lược toàn diện, giúp tăng cường bảo mật, giảm thiểu rủi ro và cải thiện khả năng ứng phó với các mối đe dọa khi triển khai hệ thống trên môi trường đám mây.\n5.3. Trụ cột 3: Độ tin cậy 5.3.1. Khái niệm Trụ cột Độ tin cậy bao gồm khả năng các workload thực hiện chức năng dự định của nó một cách chính xác và nhất quán như mong đợi. Điều này bao gồm khả năng vận hành và kiểm tra workload trong toàn bộ vòng đời của nó. 5.3.2. Nguyên tắc thiết kế 1. Tự động phục hồi sau lỗi\nGiám sát các chỉ số hiệu suất quan trọng (KPI) của workload. Tập trung vào các KPI đo lường giá trị kinh doanh, không phải khía cạnh kỹ thuật. Thiết lập hệ thống tự động khi vượt ngưỡng KPI. Tự động hóa việc thông báo, theo dõi và khắc phục lỗi. Phát triển khả năng dự đoán và ngăn chặn lỗi trước khi xảy ra. 2. Kiểm tra quy trình phục hồi\nKhác biệt với môi trường on-premises, tập trung vào kiểm tra chiến lược phục hồi. Sử dụng môi trường đám mây để mô phỏng các kịch bản lỗi. Tái tạo các tình huống lỗi đã xảy ra trước đó. Phát hiện và sửa chữa các lỗ hổng trước khi chúng gây ra vấn đề thực tế. Giảm thiểu rủi ro bằng cách chuẩn bị kỹ lưỡng cho các tình huống lỗi. 3. Mở rộng theo chiều ngang\nThay thế các tài nguyên lớn bằng nhiều tài nguyên nhỏ hơn. Phân tán yêu cầu trên nhiều tài nguyên để tránh điểm lỗi chung. Tăng khả năng chịu lỗi tổng thể của hệ thống. Giảm thiểu tác động của lỗi đơn lẻ đối với toàn bộ workload. 4. Quản lý công suất linh hoạt\nTránh bão hòa tài nguyên, một vấn đề phổ biến trong môi trường on-premises. Giám sát liên tục nhu cầu và mức sử dụng workload. Tự động thêm hoặc xóa tài nguyên để đáp ứng nhu cầu. Tối ưu hóa việc sử dụng tài nguyên, tránh cung cấp quá mức hoặc thiếu hụt. Quản lý hiệu quả các giới hạn và hạn ngạch dịch vụ. 5. Tự động hóa quản lý thay đổi\nThực hiện các thay đổi cơ sở hạ tầng thông qua tự động hóa. Áp dụng tự động hóa cho cả quá trình thay đổi và quy trình tự động hóa. Theo dõi và xem xét các thay đổi một cách có hệ thống. Giảm thiểu lỗi do con người và tăng tính nhất quán trong quản lý hệ thống. Các nguyên tắc này kết hợp với nhau để tạo ra một hệ thống đám mây đáng tin cậy, linh hoạt và hiệu quả, có khả năng tự phục hồi và thích ứng với các thay đổi và thách thức.\n5.4. Trụ cột 4: Hiệu suất vận hành 5.4.1. Khái niệm Trụ cột Hiệu suất vận hành bao gồm khả năng sử dụng tài nguyên máy tính một cách hiệu quả để đáp ứng các yêu cầu của hệ thống và duy trì hiệu quả đó khi nhu cầu thay đổi và công nghệ phát triển. 5.4.2. Nguyên tắc thiết kế 1. Phổ cập công nghệ tiên tiến\nSử dụng các công nghệ phức tạp như dịch vụ từ nhà cung cấp cloud Giúp đội ngũ tập trung vào phát triển sản phẩm thay vì quản lý tài nguyên Ví dụ: NoSQL databases, media transcoding, machine learning 2. Toàn cầu hóa nhanh chóng\nTriển khai workload ở nhiều AWS Region trên toàn cầu Giảm độ trễ và cải thiện trải nghiệm người dùng Chi phí tối thiểu cho việc mở rộng quy mô toàn cầu 3. Áp dụng kiến trúc serverless\nLoại bỏ nhu cầu quản lý máy chủ vật lý Giảm gánh nặng vận hành và chi phí giao dịch Ví dụ: Dịch vụ lưu trữ làm trang web tĩnh, dịch vụ sự kiện lưu trữ mã 4. Thử nghiệm thường xuyên\nTận dụng tài nguyên ảo hóa và tự động hóa Thực hiện các bài kiểm tra so sánh nhanh chóng Thử nghiệm với các loại instance, storage, và cấu hình khác nhau 5. Xem xét mechanical sympathy\nHiểu cách các dịch vụ cloud được sử dụng Chọn công nghệ phù hợp với mục tiêu của workload Ví dụ: Cân nhắc mô hình truy cập dữ liệu khi chọn phương pháp cơ sở dữ liệu hoặc lưu trữ Các nguyên tắc này giúp tối ưu hóa hiệu suất, giảm chi phí, tăng tính linh hoạt và khả năng mở rộng trong môi trường cloud, đồng thời cho phép đội ngũ tập trung vào việc phát triển sản phẩm và đổi mới.\n5.5. Trụ cột 5: Tối ưu hoá chi phí 5.5.1. Khái niệm Trụ cột Tối ưu hóa chi phí bao gồm khả năng vận hành các hệ thống để mang lại giá trị kinh doanh ở mức giá thấp nhất.\n5.5.2. Nguyên tắc thiết kế 1. Thực hiện quản lý tài chính đám mây\nĐầu tư thời gian và nguồn lực vào việc xây dựng năng lực quản lý tài chính đám mây. Phát triển kiến thức, chương trình, quy trình và nguồn lực cần thiết. Xem đây như một lĩnh vực mới, tương tự như bảo mật hay vận hành xuất sắc. 2. Áp dụng mô hình tiêu thụ\nChỉ trả tiền cho tài nguyên thực sự cần dùng. Điều chỉnh mức sử dụng linh hoạt theo nhu cầu kinh doanh. Tránh dự báo phức tạp, thay vào đó tập trung vào sử dụng thực tế. Ví dụ: tắt môi trường phát triển/kiểm thử khi không dùng để tiết kiệm tới 75% chi phí. 3. Đo lường hiệu quả tổng thể\nTheo dõi cả đầu ra kinh doanh và chi phí liên quan. Sử dụng các chỉ số này để đánh giá hiệu quả của việc tăng năng suất và giảm chi phí. 4. Tận dụng dịch vụ quản lý của nhà cung cấp đám mây\nĐể nhà cung cấp xử lý các công việc cơ bản như quản lý trung tâm dữ liệu, máy chủ. Sử dụng dịch vụ được quản lý để giảm gánh nặng vận hành hệ thống và ứng dụng. Tập trung nguồn lực vào các dự án kinh doanh cốt lõi thay vì quản lý hạ tầng IT. 5. Phân tích và phân bổ chi tiêu\nTận dụng khả năng theo dõi chi tiết việc sử dụng và chi phí trên đám mây. Phân bổ chi phí IT một cách minh bạch cho từng chủ sở hữu công việc. Đo lường ROI (lợi tức đầu tư) chính xác hơn. Tạo cơ hội cho các chủ sở hữu công việc tối ưu hóa việc sử dụng tài nguyên. Những nguyên tắc này giúp tổ chức tận dụng tối đa lợi ích của đám mây, tối ưu hóa chi phí và hiệu quả sử dụng, đồng thời tập trung vào các hoạt động tạo ra giá trị cho doanh nghiệp.\n5.6. Trụ cột 6: Tính bền vững 5.6.1. Khái niệm Trụ cột Bền vững tập trung vào các tác động môi trường, đặc biệt là tiêu thụ và hiệu quả năng lượng, vì chúng là đòn bẩy quan trọng để các kiến ​​trúc sư đưa ra hành động trực tiếp nhằm giảm thiểu việc sử dụng tài nguyên. 5.6.2. Nguyên tắc thiết kế 1. Hiểu rõ tác động\nĐo lường tác động hiện tại và dự đoán tác động tương lai của các workloads. Xem xét tất cả nguồn tác động, bao gồm cả việc sử dụng sản phẩm của khách hàng và tác động khi ngừng sử dụng. So sánh năng suất với tổng tác động, tính toán tài nguyên và khí thải cho mỗi đơn vị công việc. Sử dụng dữ liệu để thiết lập KPI và đánh giá cách cải thiện. 2. Thiết lập mục tiêu bền vững\nĐặt mục tiêu dài hạn cho mỗi workload, như giảm tài nguyên cần thiết cho mỗi giao dịch. Mô hình hóa lợi nhuận đầu tư cho các cải tiến bền vững. Lập kế hoạch tăng trưởng sao cho giảm cường độ tác động theo thời gian. Sử dụng mục tiêu để hỗ trợ chiến lược bền vững tổng thể của tổ chức. 3. Tối đa hóa việc sử dụng\nĐiều chỉnh quy mô khối lượng công việc phù hợp để tối ưu hiệu suất năng lượng. Thực hiện thiết kế hiệu quả để đạt mức sử dụng cao. Giảm thiểu tài nguyên, xử lý và lưu trữ không cần thiết. 4. Áp dụng công nghệ mới*\nLiên tục theo dõi và đánh giá công nghệ phần cứng và phần mềm mới, hiệu quả hơn. Thiết kế linh hoạt để có thể nhanh chóng áp dụng công nghệ mới. Hỗ trợ các cải tiến từ đối tác và nhà cung cấp. 5. Sử dụng dịch vụ được quản lý\nTận dụng dịch vụ chia sẻ để tối ưu hóa việc sử dụng tài nguyên. Chuyển đổi sang các dịch vụ đám mây quản lý để tận dụng lợi thế quy mô. Sử dụng các tính năng tự động hóa để tối ưu hóa việc sử dụng tài nguyên, như di chuyển dữ liệu ít được truy cập vào kho lưu trữ lạnh. *** 6 Giảm tác động xuôi dòng**\nGiảm năng lượng và tài nguyên cần thiết để sử dụng dịch vụ của bạn. Hạn chế nhu cầu nâng cấp thiết bị của khách hàng. Kiểm tra tác động bằng cách sử dụng device farm và phản hồi từ khách hàng thực tế. Các nguyên tắc này cung cấp một khuôn khổ toàn diện để tối ưu hóa hiệu suất, giảm tác động môi trường và cải thiện tính bền vững tổng thể của hoạt động điện toán đám mây.\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "NHẬT KÝ HÀNH TRÌNH LÊN MÂY",
	"tags": [],
	"description": "",
	"content": "GIỚI THIỆU TÁC GIẢ Tác giả: Lê Vũ Xuân An - FCJ Cloud Engineer Ambasador Chuyên ngành đào tạo: Công nghệ phần mềm - khoa Công nghệ Thông tin trường Đại học Sư phạm Kỹ thuật TP.HCM Định hướng phát triển: Cloud Engineer Thời gian bắt đầu khóa huấn luyện: 19-06-2024 "
},
{
	"uri": "//localhost:1313/vi/3-event/2.1-sovico/",
	"title": "Sovico Skill Accelerator Lab",
	"tags": [],
	"description": "",
	"content": "Bài viết này lưu lại kết quả khi thực hiện bài lab Sovico (thực hành về VPC, Multiple VPCs, VPN, VPC Security, Network Mornitoring).\nKết quả được lưu vào các hình ảnh bên dưới từng bước.\nBài viết hiện chỉ có sẵn ở tiếng Anh, chuyển sang English để xem.\nXin cảm ơn.\nNội dung VPC Fundamentals Multiple VPCs Security Controls Connecting to On-Premises Network Monitoring "
},
{
	"uri": "//localhost:1313/vi/3-event/2.1-sovico/2.1.1-vpc/",
	"title": "VPC Căn bản",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/2-content/2.2-introduction/",
	"title": "Module 1: Giới thiệu về AWS",
	"tags": [],
	"description": "",
	"content": "1. Điện toán đám mây là gì? 1.1. Khái niệm về điện toán đám mây Điện toán đám mây là việc phân phối các tài nguyên Công nghệ Thông tin theo nhu cầu qua internet với chính sách thanh toán theo mức sử dụng.\nVí dụ: người dùng (có xác thực) muốn triển khai ứng dụng, web, cần 1 máy chủ, thay vì mua rồi setup thì thuê dịch vụ cloud, bên dịch vụ cloud sẽ cung cấp theo yêu cầu, xài bao nhiêu bao lâu thì tính tiền bấy nhiêu.\n1.2. Lợi ích STT Lợi ích 1 Sử dụng bao nhiêu tính tiền bấy nhiêu, cung cấp khả năng tối ưu chi phí 2 Tăng tốc độ phát triển, nhờ tận dụng các tính năng tự động hoá và quản trị bởi nhà cung cấp dịch vụ. 3 Linh hoạt, thêm bớt các tài nguyên tuỳ ý ( ví dụ: Nay dùng 2 CPU, mai lượng truy cập ứng dụng tăng \u0026ndash;\u0026gt; dễ dàng nâng số CPU) 4 Khả năng mở rộng quy mô ứng dụng lên toàn cầu. 2. Sự khác biệt của AWS đối với các nhà cung cấp dịch vụ khác 2.1. Điều đã tạo nên sự khác biệt AWS là nhà cung cấp hạ tầng điện toán đám mây dẫn đầu trong 13 năm liên tiếp (đến hết năm 2023) – theo báo cáo của Gartner. AWS là nhà cung cấp khác biệt về tầm nhìn và văn hoá. Triết lý về giá của AWS: càng ngày càng trả ít tiền hơn cho cùng dịch vụ/tính năng/tài nguyên sử dụng.\n2.2. Triết lý, văn hoá của AWS được thể hiện thông qua các nguyên tắc lãnh đạo của mình. Customer Obsession: Đặt khách hàng làm ưu tiên hàng đầu (Kỹ thuật viên, nhân viên tư vấn không chịu áp lực về KPI sẽ tư vấn cho khách hàng tốt nhất có thể, ngược lại nếu chịu áp lực về KPI thì sẽ tư vấn cho khách hàng dùng càng nhiều càng tốt) Ownership: làm việc cho công ty, cho tổ chức, nhưng xem đó là việc của mình, luôn nghĩ cách tốt nhất để phát triển công ty 3. Bắt đầu hành trình lên mây Tham khảo lộ trình học: https://aws.amazon.com/vi/training/learn-about/ 4. Hạ tầng toàn cầu của AWS 4.1. Trung tâm dữ liệu của AWS Một trung tâm dữ liệu (data center) có thể chứa rất nhiều máy chủ.\nTất cả data center của AWS đều được sử dụng các thiết bị được tối ưu hoá dành riêng cho hoạt động của AWS.\nMuốn đánh giá hiệu năng của các máy chủ khác nhau thì nên đánh giá bằng hiệu năng thực tế.\nTham khảo: https://aws.amazon.com/vi/about-aws/global-infrastructure/\n4.2. Availability Zone (AZ) Một AZ bao gồm 1 hoặc nhiều data center, các AZ được thiết kế để không xảy ra sự cố ảnh hưởng đồng thời 2 AZ một lúc (fault isolation – cô lập lỗi).\nGiữa 2 AZ là đường kết nối riêng tốc độ cao.\nAWS khuyến nghị nên triển khai ứng dụng tối thiểu trên 2 AZ.\nĐi thi lấy chứng chỉ thì sẽ có câu này, nhưng trên thực tế, tuỳ trường hợp thì không cần triển khai trên 2 AZ, triển khai trên 1 AZ - sau đó backup lại.\n4.3. Region (Khu vực) Một AWS Region bao gồm tối thiểu 3 AZ.\nHiện tại, theo trang web của AWS, có:\n33 Region 105 AZs Và dự kiến sẽ bổ sung 6 Region và 18 AZ trên toàn cầu. Các Region được kết nối với nhau bởi mạng backbone của AWS.\nMặc định dữ liệu và dịch vụ ở các Region độc lập với nhau. (Trừ một số dịch vụ ở quy mô Global).\nVD: khách hàng ở VN thì nên chọn Region gần đó (Singapore) để tối ưu độ trễ. Có một số dịch vụ đặc thù (dịch vụ mới, dịch vụ đang phát triển) thì sẽ bị hạn chế về Region.\nCó thể thấy nguyên tắt Customer Obsession và văn hoá của AWS ở đây: Hạ tầng mở lâu -\u0026gt; Khách hàng nhiều -\u0026gt; Mức sử dụng cao -\u0026gt; Giá càng rẻ. VD: Region ở Mỹ sẽ rẻ hơn Region ở Sing… Vậy, nếu chạy test, có thể chọn các region rẻ để tối ưu chi phí\n4.4. Edge Locations Là mạng lưới data center của AWS được thiết kế để cung cấp dịch vụ với độ trễ thấp nhất có thể. Các dịch vụ AWS hoạt động tại Edge Locations (POP – Points of Present) bao gồm: CloudFront (CDN – Content Delivery Network) giúp caching dữ liệu người dùng duyệt web. Web Application Firewall (WAF) là một dịch vụ firewall layer 7. Route 53 (DNS Service) – có thể tạo domain cho ứng dụng web. Hiện ở VN có 2 Edge Locations: 1 ở HCM, 1 ở HN.\n5. Công cụ quản lý AWS Services Root login: là tài khoản đăng ký AWS Account đầu tiên, gồm email, username, pasword. Cực kỳ quan trọng, thông thường sẽ hạn chế sử dụng IAM login: IAM user không là một AWS Account hoàn chỉnh, chỉ là một user con giúp chúng ta truy xuất, quản lý các tài nguyên của AWS. Account ID: chuỗi 12 chữ số Service Search: tìm kiếm các dịch vụ, mỗi một dịch vụ sẽ có trang management riêng cho phép sử dụng các tính năng của dịch vụ đó. Support Center: tạo support case để yêu cầu hỗ trợ từ đội ngũ của AWS. AWS Command Line Interface (CLI): một công cụ mã nguồn mở cho phép tương tác với các dịch vụ AWS bằng cách sử dụng các câu lệnh; cho phép chạy các lệnh triển khai chức năng tương đương với chức năng được cung cấp bởi AWS Management Console. AWS SDK: đơn giản hoá việc sử dụng AWS services cho ứng dụng bằng cách cung cấp một bộ thư viện nhất quán và quen thuộc cho team dev. AWS SDK cung cấp hỗ trợ cho việc quản lý vòng đời của API tới AWS Services như manage credentials – retry – data marshalling – serialization – deserialization. 6. Tối ưu hoá chi phí trên AWS 6.1. Các tối ưu chi phí Lựa chọn cấu hình tài nguyên tính toán và nơi lưu trữ phù hợp. Tận dụng các phương thức thanh toán giảm giá. Xoá các tài nguyên không dùng, bật tắt tự động các tài nguyên không cần chạy 24/7. Tận dụng các dịch vụ serverless. Thiết kế kiến trúc tối ưu để giải quyết yêu cầu đề ra. Cài đặt và sử dụng AWS Budget. Quản lý chi phí theo phòng ban / ứng dụng với cost allocation tag. Liên tục theo dõi và tối ưu chi phí. Sử dụng https://calculator.aws/# để tính toán chi phí ước lượng cho các dịch vụ và tài nguyên sử dụng\n6.2. Các gói sử dụng AWS 6.2.1. Gói Basic Gói Basic cung cấp hỗ trợ cơ bản cho các vấn đề liên quan đến tài khoản và thanh toán cùng với các yêu cầu tăng thêm hạn mức cho tài khoản. Tất cả khách hàng của AWS được cung cấp truy cập 24/7 vào các tính năng sau của gói hỗ trợ Basic: Phòng chat trực tiếp 1-1 cho các câu hỏi về tài khoản và thanh toán. Diễn đàn hỗ trợ. Kiểm tra Dịch vụ. Tài liệu, tài liệu kĩ thuật và các hướng dẫn best practice. 6.2.2. Gói Developer Đối với gói Developer, các tính năng được hỗ trợ sẽ được mở rộng hơn với: Các chỉ dẫn thực hiện best practice. Hỗ trợ xây dựng kiến trúc khối: Chỉ dẫn cách sử dụng và kết hợp các sản phẩm, tính năng và dịch vụ của AWS. Hỗ trợ không giới hạn các yêu cầu hỗ trợ được tạo bởi tài khoản gốc (root user). 6.2.3. Gói Business Khi nâng lên gói hỗ trợ Business, bạn sẽ có thêm các hỗ trợ sau: Chỉ dẫn theo Use-case cụ thể: Đưa ra lời khuyên về lựa chọn các sản phẩm, tính năng và dịch vụ của AWS hỗ trợ tốt nhất cho nhu cầu của bạn. AWS Trusted Advisor: Chức năng tự động khảo sát môi trường sử dụng của khách hàng và xác định cơ hội tiết kiệm chi phí, giảm thiểu rủi ro an ninh và tăng cường độ tin cậy và hiệu suất của hệ thống. Hỗ trợ sử dụng AWS Support API: Tương tác với Support Center và Trusted Advisor qua API để tự động quản lý yêu cầu hỗ trợ và vận hành AWS Trusted Advisor. Hỗ trợ về phần mềm bên thứ ba: Hỗ trợ hệ điều hành và cấu hình máy ảo EC2, cùng với hiệu suất của các ứng dụng phổ biến trên nền tảng AWS. Hỗ trợ không giới hạn các yêu cầu hỗ trợ được tạo bởi tất cả các IAM User. 6.2.4. Gói Enterprise Thêm vào đó, với khách hàng sử dụng gói Enterprise sẽ có thêm các đặc quyền về tính năng như sau: Chỉ dẫn về kiến trúc phần mềm: Lời khuyên về cách phối hợp dịch vụ AWS để giải quyết vấn đề về ứng dụng hoặc tải trọng công việc. Quản lý sự kiện hạ tầng: Phân tích chuyên sâu về use-case của bạn và cung cấp hướng dẫn về quy mô và kiến trúc phù hợp cho sự kiện cụ thể. Technical Account Manager: Sự hỗ trợ thường trực từ Technical Account Manager (TAM) giải quyết các vấn đề liên quan đến tình huống và ứng dụng của bạn. Ưu tiên và chăm sóc đặc biệt cho các yêu cầu hỗ trợ Hỗ trợ đánh giá Quản lý Doanh nghiệp. 7. Các mô hình triển khai cho CLoud 7.1. Triển khai dựa trên đám mây Chạy tất cả các phần của ứng dụng trên đám mây. Di chuyển các ứng dụng hiện có lên đám mây. Thiết kế và xây dựng các ứng dụng mới trên nền tảng đám mây. Trong mô hình triển khai dựa trên đám mây, bạn có thể di chuyển các ứng dụng hiện có lên đám mây hoặc bạn có thể thiết kế và xây dựng các ứng dụng mới trên đám mây. Bạn có thể xây dựng các ứng dụng đó trên cơ sở hạ tầng cấp thấp yêu cầu nhân viên CNTT của bạn quản lý chúng. Ngoài ra, bạn có thể xây dựng chúng bằng các dịch vụ cấp cao hơn giúp giảm yêu cầu quản lý, thiết kế và mở rộng quy mô của cơ sở hạ tầng cốt lõi.\nVí dụ, một công ty có thể tạo một ứng dụng bao gồm các máy chủ ảo, cơ sở dữ liệu và các thành phần mạng được đặt hoàn toàn trên nền tảng đám mây. 7.2. Triển tại chỗ Triển khai tài nguyên bằng cách sử dụng các công cụ quản lý tài nguyên và ảo hóa. Tăng cường sử dụng tài nguyên bằng cách sử dụng công nghệ quản lý ứng dụng và ảo hóa. Triển khai tại chỗ cũng được gọi là triển khai đám mây riêng. Trong mô hình này, tài nguyên được triển khai tại chỗ bằng cách sử dụng các công cụ quản lý tài nguyên và ảo hóa.\nVí dụ, bạn có thể có các ứng dụng chạy trên công nghệ được lưu giữ hoàn toàn trong trung tâm dữ liệu tại chỗ của bạn. Mặc dù mô hình này rất giống với cơ sở hạ tầng CNTT cũ, nhưng việc kết hợp các công nghệ quản lý ứng dụng và ảo hóa giúp tăng cường sử dụng tài nguyên. 7.3. Triển khai kết hợp Kết nối tài nguyên trên nền tảng đám mây với cơ sở hạ tầng tại chỗ. Tích hợp các tài nguyên trên nền tảng đám mây với các ứng dụng CNTT cũ. Trong triển khai kết hợp, các tài nguyên dựa trên đám mây được kết nối với cơ sở hạ tầng tại chỗ. Bạn có thể muốn sử dụng phương pháp này trong một số tình huống. Ví dụ: bạn có các ứng dụng cũ được bảo trì tốt hơn tại chỗ hoặc các quy định của chính phủ yêu cầu doanh nghiệp của bạn phải lưu giữ một số hồ sơ tại chỗ.\nVí dụ, giả sử một công ty muốn sử dụng các dịch vụ đám mây có thể tự động hóa xử lý dữ liệu hàng loạt và phân tích. Tuy nhiên, công ty có một số ứng dụng cũ phù hợp hơn tại cơ sở và sẽ không được di chuyển lên đám mây. Với triển khai kết hợp, công ty sẽ có thể giữ các ứng dụng cũ tại cơ sở trong khi vẫn được hưởng lợi từ các dịch vụ dữ liệu và phân tích chạy trên đám mây. "
},
{
	"uri": "//localhost:1313/vi/3-event/2.2-module2/",
	"title": "Module 2",
	"tags": [],
	"description": "",
	"content": "Bài viết này note lại những kiến thức có được từ 2 video chủ đề Module02\nNội dung Amazon Virtual Private Cloud VPC Security và các tính năng Multi-VPC "
},
{
	"uri": "//localhost:1313/vi/3-event/2.1-sovico/2.1.2-multivpcs/",
	"title": "Multiple VPCs",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/2-content/",
	"title": "Nội dung lý thuyết",
	"tags": [],
	"description": "",
	"content": "MỤC LỤC Module 1: Giới thiệu về Amazon Web Service Module 2: Tính toán trên AWS Module 3: Cơ sở hạ tầng và độ tin cậy toàn cầu Module 4: Mạng Module 5: Lưu trữ và cơ sở dũ liệu Module 6: Bảo mật Module 7: Giám sát và phân tích Module 8: Giá cả và hộ trợ Module 9: Di cư và đổi mới Module 10 Hành trình đám mây Module 11: Kiến thức cơ bản về AWS Certified Cloud Pratitioner "
},
{
	"uri": "//localhost:1313/vi/3-event/",
	"title": "Tuần 2",
	"tags": [],
	"description": "",
	"content": "Nội dung Sovico lab Module 2 Optimizing AWS Cost and Security "
},
{
	"uri": "//localhost:1313/vi/3-event/2.2-module2/2.2.2-vpcsec-multivpcs/",
	"title": "VPC Security và các tính năng Multi-VPC",
	"tags": [],
	"description": "",
	"content": "Link video ở đây.\nSecurity Group Là một tường lửa ảo có lưu giữ trạng thái (stateful) giúp kiểm soát lượng truy cập đến và đi trong tài nguyên của AWS.\nSG rule được hạn chế theo giao thức, địa chỉ nguồn, cổng kết nối, hoặc một SG khác.\nSG rule chỉ cho phép rule Allow.\nSG được áp dụng lên các ENI.\nMặc định SG chặn mọi truy cập đến và cho phép mọi truy cập đi\nNetwork Access Control List (NACL) Là một tường lửa ảo không lưu giữ trạng thái (stateless) giúp kiểm soát lượng truy cập đến và đi trong tài nguyên của AWS.\nNACL được hạn chế theo giao thức, địa chỉ nguồn, cổng kết nối.\nNACL được áp dụng lên các Subnets.\nMặc định sẽ cho phép mọi truy cập đến và đi.\nVPC Flow Logs Là một tính năng cho phép nắm bắt thông tin về lưu lượng IP đến và đi từ các ENI trong VPC.\nCác tập tin logs có thể được xuất bản (publish) lên CloudWatch Logs hoặc S3.\nTính năng này không capture nội dung gói tin.\nVPC Peering Là tính năng giúp kết nối 2 hay nhiều VPC để các tài nguyên bên trong các VPC có thể liên lạc trực tiếp với nhau mà không cần phải thông qua internet, góp phần gia tăng tính bảo mật cho VPC.\nLà kết nối cần tạo 1:1 giữa hai VPC thành viên, không hỗ trợ transitive routing.\nTức là nếu có 3 cái VPC: A B C, thì tạo peering giữa A và B, A và C thì B và C không thể liên lạc với nhau.\nKhông hỗ trợ khi 2 VPC bị overlap IP address space.\nBị trùng không gian IP, VD: VPC A: 10.10.0.0/16, VPC B: 10.10.0.0/16 =\u0026gt; Không tạo VPC Peering được.\nTạo VPC Peering \u0026gt; Cấu hình lại Route table \u0026gt; Hoàn thành\nTransit Gateway Được dùng để kết nối các VPC và mạng on-premises thông qua một hub trung tâm. Giúp đơn giản hoá mạng (topology) và kết thúc các mối quan hệ định tuyến phức tạp.\nLà công cụ để gán các subnet của từng VPC cần kết nối với nhau vào một TGW đã được khởi tạo. Transit Gateway Attachment hoạt động ở quy mô AZ.\nNếu VPC có 3 AZ thì phải có 3 Transit Gateway.\nTrong VPC, khi một subnet ở một AZ có Transit Gateway Attachment với một TGW, các subnet khác trong cùng AZ đều có thể kết nối tới TGW đó.\nTương tự VPC Peering:\nTạo Transit Gateway \u0026gt; Tạo Transit Gateway Attachment \u0026gt; Cấu hình lại Route table \u0026gt; Hoàn thành\n"
},
{
	"uri": "//localhost:1313/vi/3-event/2.1-sovico/2.1.3-securitycontrols/",
	"title": "Cấu hình bảo mật cho VPC",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/2-content/2.3-computevm/",
	"title": "Module 2: Tính toán trên đám mây",
	"tags": [],
	"description": "",
	"content": "1. Amazon Elastic Compute Cloud (Đám mây điện toán đàn hồi - Amazon EC2) 1.1. Khái niệm Amazon EC2 giống với máy chủ ảo hoặc máy chủ vật lý truyền thống. EC2 có khả năng khởi tạo nhanh, khả năng co dãn tài nguyên mạnh mẽ, linh hoạt. Amazon EC2 có thể hỗ trợ các workload như: Lưu trữ web, ứng dụng, cơ sở dữ liệu, dịch vụ xác thực; Bất cứ công việc nào khác mà máy chủ thông thường có thể đáp ứng. 1.2. Các loại máy ảo Cấu hình của Amazon EC2 phải lưu ý chọn theo nhu cầu, mà lựa chọn cấu hình thông qua việc lựa chọn các EC2 Instance type Instance type quyết định các yếu tố: CPU (Intel / AMD / ARM (Graviton 1 / 2 / 3) / GPU) Memory Network Storage 1.3. AMI/Backup/Key Pair 1.3.1. Amazon Machinee Image (AMI) \u0026amp; Backup Sử dụng AMI ( Amazon Machine Image ) có thể chia một hoặc nhiều EC2 Instances cùng lúc. AMI có sẵn của AWS, trên AWS Market Place và custom AMI tự tạo từ EC2 Instances. AMI bao gồm: root OS volumes , quyền sử dụng AMI quy định tài khoản AWS được sử dụng và mapping EBS volume sẽ được tạo và gán vào EC2 Instances. EC2 instance có thể được backup bằng cách tạo snapshot 1.3.2. Khác nhau giữa backup và snapshot Sự khác nhau giữa Snapshot và Backup nằm ở cách chúng lưu trữ dữ liệu và sử dụng dung lượng. Backup Snapshot Backup sẽ là một bản sao hoàn chỉnh của dữ liệu ảnh/ tệp tin. Vì vậy, nếu bạn có 5TB dữ liệu, mỗi bản sao lưu sẽ chiếm 5TB dung lượng bổ sung. Nếu bạn tạo bản sao lưu sau mỗi giờ, sau 10 giờ, tổng dung lượng của các bản sao lưu sẽ là 50TB. Vì vậy, việc lưu trữ nhiều bản sao lưu không phổ biến và không hiệu quả cho việc tạo bản sao dữ liệu. Lúc này, Snapshot rất hữu ích cho việc tạo bản sao dữ liệu vì chúng không phải là bản sao lưu và có thể có nhiều phiên bản mà không chiếm nhiều dung lượng. Snapshot chỉ lưu đủ thông tin để khôi phục một thay đổi và do đó tiết kiệm dung lượng hơn so với bản sao lưu (backup). 1.3.3. Key pair Key pair ( public key và private key ) dùng để mã hóa thông tin đăng nhập cho EC2 Instance.| 2. Amazon Lightsail 3. Amazon EFS / FSX 4. AWS Application Migration Service ( MGN ) "
},
{
	"uri": "//localhost:1313/vi/3-event/2.3-gapvxawsevent/",
	"title": "OPTIMIZING AWS COSTS AND SECURITY",
	"tags": [],
	"description": "",
	"content": "Bài viết này chỉ lưu lại workshop từ event \u0026ldquo;OPTIMIZING AWS COSTS AND SECURITY\u0026rdquo; được tổ chức bởi AWS và G-AsiaPacific Việt Nam\nEvent cung cấp các kiến thức về Security trên AWS, phòng chống Ransomware, Tối ưu hoá chi phí (Cost optimizing), và các hoạt động kèm theo.\nWorkshop cho biết về cách sử dụng Screener - một ứng dụng nguồn mở giúp doanh nghiệp cũng như người dùng có thể nắm bắt được các vấn đề, các thông tin diễn ra trên hệ thống AWS của mình với 5 trụ cột lớn trong AWS Well-Architected Framework.\nDưới đây là toàn bộ bài Workshop.\n===\nPre-requisites Before starting the workshop\u0026hellip; Workshop expected duration of completion: 2 hours\nTarget audience: AWS Users with any workload on AWS\nRecommended background knowledge: Basic AWS knowledge such as Compute, Database, Storage, Security and Networking.\nPreparing for the workshop Before starting the lab, make sure to prepare an account to use AWS services, let\u0026rsquo;s get started with AWS temporary account provided in this workshop.\nAlso, to minimize the browser compatibility issue, we recommend you to use either Mozilla Firefox or Google Chrome Browser for the lab.\n\u0026hellip;At AWS Event Start with AWS Workshop Studio account Log in with AWS Workshop Portal This page guides you through the prerequisites steps before starting the lab when attending an event hosted by AWS.\nConnect to the portal by going to the link that is provided by your AWS Event Facilitator.\nThe following screen shows up. Click Enter one-time-password (OTP).\nEnter your email address. You should receive an email with a one-time passcode.\nEnter the one-time password on the below screen, then click next.\nJoin the Workshop Studio Event You will now be on the Review and Join page. Review and accept the terms and conditions, then click Join Event.\nOpen the AWS Console Joining the event should have opened a new Amazon Service Screener Workshop page which will allow you to open the AWS console. On this window, click the Open AWS console link in the left-hand menu bar.\nOnce you\u0026rsquo;ve followed all of the steps above, you are ready to start the lab.\nThis workshop will only run in North Virginia region us-east-1. Please make sure that you are on this region the whole time. If you are unable to locate certain resources, check the region selection and ensure it is on us-east-1\nWorkshop Instructions Workshop background and architecture In this workshop, a web application has been deployed in your AWS environment, along with a database server and an S3 bucket.\nOverview of what\u0026rsquo;s next:\nInstall Service Screener Examine Service Screener report How to be well architected? Architecture Diagram What is deployed in your account EC2 instance as Web Server RDS MySQL instance as Database Server S3 Bucket with objects Other services such as IAM, networking. Installing Service Screener First we are going to install Service Screener to run checks on our AWS environment.\nLaunch CloudShell In the CloudShell terminal, run this script to install the dependencies\npython3 -m venv . source bin/activate rm -rf service-screner-v2 git clone https://github.com/aws-samples/service-screener-v2.git cd service-screener-v2 pip install -r requirements.txt alias screener=\u0026#34;python3 $(pwd)/main.py\u0026#34; Using Service Screener When running Service Screener, you need to specify the regions and services you would like to run on. In this lab, since our workload is in us-east-1, run the following code in CloudShell terminal:\nscreener --region us-east-1 You should see the following after you have installed service screener in CloudShell\nService screener runs locally within CloudShell, and generates a report output as output.zip file. You can download the file in CloudShell console.\nClick on Actions, then Download file. Enter file path:\n~/service-screener/output.zip The file is downloaded locally in your machine.\nUnzip output.zip file. You will see a folder named html.\nOpen html folder, then double click to open index.html.\nOnce you opened the file, you will see a static webpage which contains the report generated by Service Screener. Successfully obtained Service Screener Report!\nYou may now move on to the next step of this workshop.\nExploring Service Screener Report In the report webpage, you can navigate through the left side menu to understand more in detail what is in your AWS environment.\nHome page In the home page, we can see an overview of our AWS environment, you can see that there are many findings (based on Well Architected Framework) in our current environment that can be improved.\nThe findings are categorized with different level of criticality/risk such as: high, medium, low and informational, each of them indicates:\nHigh: Organisation need to take immediate action, keeping this item open often lead to unforeseen high-impact technical debt. Medium: Organisation to evaluate the priorities on these items, improvements can be done within the next 3-6 months. Low: Organisation can make changes to improve bits of your cloud infrastructure. Informational: Out-of-norm type of settings but usually do not have risks against AWS Well-Architected Pillar. Flagged it out for the purposes of ease of dive-deep consultation among the team. Please take a look around the webpage and see what\u0026rsquo;s in the report of our current account.\nSince we only deployed services like EC2, RDS, S3 and IAM - please explore the findings for these services using the left navigation bar.\nIf you are running Service Screener in your own AWS account, you will see more findings populated for your AWS environment.\nComing up, we will see how we can be more well-architected by using the information provided by Service Screener, making changes in our AWS environment to be more well-architected.\nWe will be exploring services in this sequence:\nIAM EC2 RDS S3 IAM Configuring a custom password policy in AWS IAM In Service Screener report, you will see the findings which tells you that your current AWS Account does not have a password policy.\nBased on AWS Startup Security Baseline enforcing password policy is one of the controls that should be in place to prevent discovery of passwords through brute force or social engineering.\nOpen the AWS IAM console . In the navigation pane, choose Account settings. In the Password policy section, choose Edit. Choose Custom to use a custom password policy. Details about the custom password policy options can be found here Select the options that you want to apply to the password policy and choose Save changes. Confirm that you want to set a custom password policy by choosing Set custom. Password policy set!\nYou have a password policy in place to prevent password discovery and vulnerability.\nConverting an inline policy to a managed policy In the Service Screener report, you will find that we have inline policies that is linked to the Operational Excellence Pillar. Typically, we recommend to use AWS managed policies for the features as mentioned in the description of the finding shown.\nIf you have inline policies within your AWS account, you can convert them to managed policies. To do this, copy the policy to a new managed policy. Next, attach the new policy to the identity that has the inline policy. Then delete the inline policy.\nSteps to convert inline policy to managed policy:\nOpen the AWS IAM console . In the navigation pane, choose Roles. In the list, choose the name of the IAM role that has the policy. For example, the appstack-WebServerInstanceRole. If you see a red warning box saying You need permissions, please ignore it and proceed with the workshop as usual. It will not affect the ability to complete the steps below.\nChoose the Permissions tab.\nChoose the \u0026ldquo;+\u0026rdquo; next to the WebServerInstanceRoleDefaultPolicy to expand the selection. Note that this is a customer inline policy.\nCopy the JSON policy document for the policy. In the navigation pane, choose Policies.\nChoose Create policy and then choose the JSON tab.\nReplace the existing text with your JSON policy text, and then choose Next. Enter a name for your policy and choose Create policy.\nIn the navigation pane, choose Roles, and again choose the name of the IAM role appstack-WebServerInstanceRole.\nChoose Add permissions.\nOn the next page, choose Attach existing policies directly, select the check box next to the name of your new policy, choose Next: Review, and then choose Add permissions. You are returned to the Summary page for the role.\nSelect the button next to the inline policy that you want to remove.\nChoose Remove. Confirm removing the policy by entering the name of the policy. Your inline policy is removed.\nConverted Inline to Customer Managed Policy!\nYour inline policies are now converted to managed policies with the benefits of reusability, central change management, versioning and more. Find out more here\nEC2 Remove unrestricted access to sensitive ports of the Amazon EC2 instance Let\u0026rsquo;s take a look at the findings for EC2 Web server. If you filter the Criticality as High, you will see that sensitive ports are open to all.\nSecurity groups are used to control traffic to EC2 instances, and other supported resources. Security groups act as a virtual firewall that can be applied to any group of related resources in order to consistently define rules for allowing inbound and outbound traffic. In addition to rules based on IP addresses and ports, security groups support rules to allow traffic from resources associated to other security groups.\nTherefore, it is important to restrict the access to sensitive ports - in this case port 22 is open to all.\nSteps to modify security group:\nOpen the Amazon VPC console .\nIn the left pane, choose Security groups.\nSelect appstack-EC2SecurityGroup.\nIn the bottom section of the page, choose the Inbound Rules tab.\nChoose Edit rules.\nIdentify the rule that allows access through port 22 and then choose Delete to remove it.\nChoose Save rules.\nRemoved sensitive port access!\nIn this case, since port 22 is not needed for any remote access, we are removing it from the security group inbound traffic allow list.\nDo you know that AWS Systems Manager Session Manager can be used to allow remote access to Amazon EC2 instances without the need of exposing an inbound SSH port or remote PowerShell port? Find out more information here .\nCreate a snapshot of the Amazon EC2 instance Reliability pillar in AWS Well Architected encompassess the ability of a workload to perform its intended function correctly and consistently when it’s expected to.\nHow reliable is our EC2 instance?\nCan we automatically recover from failure? Can we test recovery procedures? The answer to the above is no, hence Service Screener flagged this as a High criticality where the EBS of our EC2 instance does not have snapshots available for us to recover.\nWe will need to take EBS snapshots to ensure our workload is reliable, where we could recover when failure occurs.\nSteps to create a snapshot:\nOpen the Amazon EC2 console .\nIn the navigation pane, choose Snapshots, then Create snapshot.\nFor Resource type, choose Volume.\nFor Volume ID, select the volume from which to create the snapshot.\nChoose Create snapshot.\nEBS Snapshot created!\nNow you can recover your EC2 instance with the snapshot of your EBS whenever you need it. You can use Amazon Data Lifecycle Manager to automate the creation, retention, and deletion of EBS snapshots and EBS-backed AMIs.\nChange the instance type of the Amazon EC2 instance to the latest generation type Let\u0026rsquo;s take a look at Cost Optimization pillar. Are there any ways we could optimize cost for our EC2 instance?\nService Screener finding shows us that our EC2 instance is using an older generation type (c4.large). Let\u0026rsquo;s upgrade to the latest generation for lower cost and higher performance.\nService Screener shows a warning through the Label Have Downtime if a change will result in downtime.\nSteps to upgrade instance type:\nOpen the Amazon EC2 console .\nIn the navigation pane, choose Instances.\nSelect the instance ss-webserver-instance and choose Instance state, then Stop instance. When prompted for confirmation, choose Stop. It can take a few minutes for the instance to stop.\nWith the instance still selected, choose Actions \u0026gt; Instance settings \u0026gt; Change instance type.\nThis option is grayed out if the instance state is not stopped.\nOn the Change instance type page, do the following:\nFor Instance type, select c5.large to migrate the instance from the c4.large instance type.\nChoose Apply to accept the new settings.\nTo start the instance, select the instance and choose Instance state \u0026gt; Start instance. It can take a few minutes for the instance to enter the running state.\nEC2 upgraded to newer generation!\nYou have upgraded your EC2 instance from older generation (c4) to newer generation (c5). You can also change your instance to another instance types! You can find out the information about different EC2 instance types here .\nRDS Remove public access to Amazon RDS instance In our environment, our database server is publicly accessible. This poses a High risk of data security.\nOpen the Amazon RDS console . Navigate to Databases and then choose the DB instance appstack-ssmysqldbinstance. Choose Modify. Under Connectivity, expand Additional connectivity configuration. Under Public access, choose Not publicly accessible. Choose Continue. Under Scheduling of modifications, choose Apply immediately. Choose Modify DB Instance. Wait for the status change from Modifying to Available. This might take a few minutes. While waiting for DB status to be available, feel free to grab a coffee or some snacks, or you could move on to doing the next module S3.\nDisabled publicly accessible option for RDS!\nChallenge Since our database server is still within a public subnet, can you make changes to the database for it to be in the private subnet?\nWhenever you modify a database instance, there will be downtime, if you are making changes on production database, we recommend to perform the modification on a test instance, before applying the same changes to production. When applying changes to production, you can choose to apply at next maintenance window instead of immediately. For more information .\nEnable encryption on the Amazon RDS instance Our database is not secured as we do not have encryption at rest in place. Encryption allows us to increase data protection for our applications, which in many cases are part of organization\u0026rsquo;s compliance requirement.\nYou can only encrypt an Amazon RDS DB instance when you create it, not after the DB instance is created. However, because you can encrypt a copy of an unencrypted snapshot, you can effectively add encryption to an unencrypted DB instance. That is, you can create a snapshot of your DB instance, and then create an encrypted copy of that snapshot. You can then restore a DB instance from the encrypted snapshot, and thus you have an encrypted copy of your original DB instance.\nCreate a DB snapshot of the unencrypted DB instance Open the Amazon RDS console . In the navigation pane, choose Databases. In the list of DB instances, choose the appstack-ssmysqldbinstance DB instance. For Actions, choose Take snapshot. The Take DB snapshot window appears. Enter the name of the snapshot in the Snapshot name box. Choose Take snapshot. The Snapshots page appears, with the new DB snapshot\u0026rsquo;s status shown as Creating. The snapshot creation will take 5 minutes or so, feel free to take a break if you need to.\nCreate an encrypted DB snapshot Select the DB snapshot after its status is Available. For Actions, choose Copy snapshot. The Copy snapshot page appears. For New DB snapshot identifier, type the name of the DB snapshot copy. For Encryption, choose Enable Encryption. Choose Copy snapshot. You have now created an encrypted DB instance snapshot. AWS managed key for Amazon RDS is used to encrypt the DB snapshot in this workshop module. You can also create and use a customer managed key to encrypt a RDS instance or snapshot. For more information about KMS keys, see AWS KMS keys in the AWS Key Management Service Developer Guide.\nRestore the DB instance from the encrypted snapshot Select the encrypted DB snapshot after its status is Available. For Actions, choose Restore snapshot. For Deployment Options, select Single DB Instance. On the Restore snapshot page, for DB instance identifier, enter any name for the restored DB instance. Under Instance Configuration, choose Memory optimized classes, select db.r5.large. Under Connectivity \u0026gt; VPC security group (firewall), choose ss-cdk-repo/mainVPC. Under existing security group, select appstack-ssMySQLDBInstanceSecurityGroup. Keep other settings by default. Under Encryption tab, you should see that the encryption is enabled and you cannot disable it. This ensures that the database created will have encryption enabled. Choose Restore DB instance. The existing unencrypted DB instance and DB snapshots can be deleted after the new DB instance is created from the encrypted snapshot.\nEnable automated backups on the Amazon RDS instance Similar to our web server, our database server does not have automated backup enabled, which results in Service Screener flagging High for Reliability.\nAmazon RDS comes with feature which allows you set automated backup for your database instance. Setting the backup retention period to a non-zero value would enable it.\nSteps to enable RDS Automated Backup:\nOpen the Amazon RDS console . In the navigation pane, choose Databases, and then choose the DB instance. Choose Modify. For Backup retention period, choose a positive non-zero value, for example 7 days. Choose Continue. Choose Apply immediately. Choose Modify DB instance to save the changes. Enabled automated backup for RDS!\nLearn more about Amazon RDS Automated Backup here Enable automatic minor version upgrades on the Amazon RDS instance At Amazon, we define operational excellence as a commitment to build software correctly while consistently delivering a great customer experience. Operational excellence helps your team to focus more of their time on building new features that benefit customers, and less time on maintenance and firefighting.\nIn this case, we want to spend less time in maintaining a database, Amazon RDS has a feature which allows management of database easier with Automatic Minor Version Upgrades. It is a feature that you can enable to have your database automatically upgraded when a new minor database engine version is available.\nSteps to enable Automatic Minor Version Upgrades:\nOpen the Amazon RDS console .\nIn the navigation pane, choose Databases, and then choose the DB instance.\nChoose Modify.\nExpand Additional Configuration and set the Enable auto minor version upgrade option for Maintenance. Choose Continue.\nChoose Apply immediately.\nChoose Modify DB instance to save the changes.\nEnabled automatic minor version upgrades!\nYou can find out how automatic minor version upgrades work here .\nS3 Block public access to the Amazon S3 bucket In our environment, we have an S3 bucket which has block public access disabled. Typically, S3 buckets are best to be kept private, unless if you are hosting a public static website with S3.\nIn our case, we are not using the S3 bucket for hosting public website or any files, therefore we can enable block public access setting.\nSteps to block public access to Amazon S3 bucket:\nOpen the Amazon S3 console . In the Bucket name list, choose the name of the bucket appstack-publicbucket. Choose Permissions. Choose Edit to change the public access settings for the bucket. Choose Save. When you\u0026rsquo;re asked for confirmation, enter confirm. Then choose Confirm to save your changes. Enabled Block Public Access!\nIf you are hosting static website, there are other ways to secure your S3 resources by restricting access with bucket policies, enable monitoring and logging, enabling encryption. For more information, see here Create a lifecycle configuration for the Amazon S3 bucket To manage your objects so that they are stored cost effectively throughout their lifecycle, configure their Amazon S3 Lifecycle. An S3 Lifecycle configuration is a set of rules that define actions that Amazon S3 applies to a group of objects. You can automate moving objects to a lower cost storage tier if they are not needed frequently (e.g. Archive files that are created older than 90 days)\nSteps to create lifecycle configuration:\nOpen the Amazon S3 console . In the Bucket name list, choose the name of the bucket appstack-publicbucket. Go to Management \u0026gt; Create Lifecycle Rule. In Lifecycle rule name, enter a name for your rule. The name must be unique within the bucket. For Choose a rule scope, choose This rule applies to all objects in the bucket, and choose I acknowledge that this rule applies to all objects in the bucket. Under Lifecycle rule actions, choose Transition current versions of objects between storage classes. In Storage class transitions, choose the storage class to transition to Standard-IA. In Days after object creation, enter the number of days after creation to transition the object, for example 30 days. Choose Create rule. You will see Lifecycle configuration page with the new rule you have just created. You can find out more examples of Amazon S3 lifecycle configuration here .\nEnable Intelligent-Tiering on the Amazon S3 bucket If your S3 objects have unknown, changing or unpredictable access patterns, independent of object size of retention period, you can use S3 Intelligent-Tiering storage class.\nThe S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective access tier when access patterns change, without operational overhead or impact on performance.\nSteps to enable Intelligent-tiering:\nOpen the Amazon S3 console . In the Bucket name list, choose the name of the bucket appstack-publicbucket. Choose Properties. Navigate to the S3 Intelligent-Tiering Archive configurations section and choose Create configuration. In the Archive configuration settings section, specify a descriptive configuration name for your S3 Intelligent-Tiering Archive configuration. Under Choose a configuration scope, choose This configuration applies to all objects in the bucket. Under Status, select Enable. In the Archive rule actions section, select Deep Archive Access tier. For Days until transition to the Deep Archive Access tier, specify the number of days between 180 to 730. Choose Create. You can find out the information on how S3 Intelligent-Tier works here .\nCreated S3 Lifecycle and used Intelligent-Tiering!\nChallenge Now that you have completed the fix for some of the findings, can you try fixing the other findings by Service Screener for your S3 bucket?\nSummary What have we learnt? In this workshop, you have seen how you can use Service Screener to generate findings in your AWS Environment, improving your architecture based on the Well Architected Framework by using recommendations from Service Screener Report.\nYou can run the Service Screener Tool again to generate a report to see if the findings are removed because it has been fixed.\nInstall Service Screener again, if your CloudShell terminal has expired.\npython3 -m venv . source bin/activate rm -rf service-screner-v2 git clone https://github.com/aws-samples/service-screener-v2.git cd service-screener-v2 pip install -r requirements.txt alias screener=\u0026#34;python3 $(pwd)/main.py\u0026#34; Run Service Screener command.\nscreener --region us-east-1 Challenge You may continue to fix the remaining of the findings from Service Screener.\nNext step We would recommend customers to use this tool in your own AWS environment frequently to keep your AWS environment aligned with the AWS Well Architected Framework.\nService Screener Github contains information on how to setup Service Screener, you can also contribute in our open source project.\nThank you for attending AWS Service Screener Workshop! Please fill up the survey that will be distributed by your AWS Event facilitators and let us know how we can improve the workshop experience for you.\nContributors If you are an AWS Partner who would like to run this workshop with AWS customers, you can reach out to your fellow AWS Solutions Architect.\nService Screener Open source project contributors:\nKuetTai, Yong - AWS Solutions Architect Sarika Subramaniam - AWS Solutions Architect Chun Yong, Khoo - AWS Solutions Architect Nurul Najihah - AWS Solutions Architect Kitt Hon, Choy - AWS Solutions Architect Fahim Surani - AWS Solutions Architect Jia Qin, Choong - AWS Solutions Architect Lee Hsiang, Tan - AWS Partner Solutions Architect, ISV Sook Yan, Leong - AWS Technical Account Manager Hoon Sin, Cheong - AWS Security Specialist Solutions Architect "
},
{
	"uri": "//localhost:1313/vi/3-event/2.1-sovico/2.1.4-connectonpremises/",
	"title": "Kết nối tới môi trường on-premises",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/2-content/2.4-networking/",
	"title": "Lab 9",
	"tags": [],
	"description": "",
	"content": "Link bài lab: YÊU CẦU HỖ TRỢ TỪ AWS SUPPORT\nChỉ xem. Biết thêm về cách tạo Support case trong các trường hợp bị mất phí không rõ nguyên nhân hoặc những vấn đề liên quan đến AWS Account.\n"
},
{
	"uri": "//localhost:1313/vi/3-event/2.1-sovico/2.1.5-networkmonitoring/",
	"title": "Giám sát mạng",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/2-content/2.5-networkservice/",
	"title": "Lab 7",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]